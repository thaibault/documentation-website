{
  "name": "documentation-website",
  "version": "1.0.144",
  "license": "CC-BY-3.0",
  "description": "Declarative multilanguage documentation website generator",
  "keywords": [
    "documentation",
    "website",
    "project",
    "homepage",
    "page"
  ],
  "files": [
    "source",
    "index.py"
  ],
  "main": "source/index.html.ejs",
  "bin": {
    "documentationWebsite": "index.py"
  },
  "repository": {
    "type": "git",
    "url": "git@github.io:thaibault/documentationWebsite.git"
  },
  "scripts": {
    "build": "webOptimizer build",
    "build:stats": "webOptimizer build --profile --json >/tmp/stat.json && echo 'Results successfully written to \"/tmp/stat.json\".'",
    "clear": "webOptimizer clear",
    "document": "webOptimizer document",
    "lint": "webOptimizer check:type; webOptimizer lint",
    "serve": "webOptimizer serve",
    "start": "yarn serve",
    "test": "yarn build",
    "update": "yarn version --patch && yarn publish",
    "watch": "webOptimizer build --watch"
  },
  "dependencies": {
    "boostnode": "*",
    "bootstrap": "^3.3.7",
    "website-utilities": "*"
  },
  "devDependencies": {
    "@babel/polyfill": "*",
    "babel-eslint": "*",
    "css-loader": "*",
    "cssnano": "*",
    "default-gateway": "*",
    "errorreporter": "*",
    "eslint": "*",
    "eslint-config-google": "*",
    "eslint-plugin-flowtype": "*",
    "eslint-plugin-jsdoc": "*",
    "favicons-webpack-plugin": "*",
    "flow-bin": "*",
    "jsdoc": "*",
    "legal-notes": "*",
    "mini-css-extract-plugin": "*",
    "offline-plugin": "*",
    "postcss-fontpath": "*",
    "postcss-import": "*",
    "postcss-loader": "*",
    "postcss-preset-env": "*",
    "postcss-sprites": "*",
    "postcss-url": "*",
    "style-loader": "*",
    "stylelint": "*",
    "stylelint-config-standard": "*",
    "ua-parser-js": "*",
    "weboptimizer": "*",
    "webpack": "*",
    "webpack-cli": "*",
    "webpack-dev-server": "*"
  },
  "webOptimizer": {
    "build": {
      "definitions": {
        "TRACKING_CODE": {
          "__evaluate__": "`'${self.module.preprocessor.html.options.locals.TRACKING_CODE}'`"
        },
        "LANGUAGES": {
          "__evaluate__": "`['${self.module.preprocessor.html.options.locals.LANGUAGES.join(\"', '\")}']`"
        }
      }
    },
    "debug": {
      "module": {
        "optimizer": {
          "babelMinify": {
            "bundle": null,
            "module": null
          },
          "htmlMinifier": null
        }
      }
    },
    "injection": {
      "internal": {
        "errorreporter": "errorreporter",
        "index": {
          "__evaluate__": "['@babel/polyfill', 'ua-parser-js', `./${path.relative(self.path.source.base, self.path.source.asset.cascadingStyleSheet)}/index`].concat(self.offline ? 'offline-plugin/runtime' : []).concat('./index')"
        }
      }
    },
    "library": false,
    "module": {
      "aliases": {
        "bootstrap$": "bootstrap/dist/css/bootstrap.min.css",
        "website-utilities/index.css$": "website-utilities/index.compiled.css"
      },
      "optimizer": {
        "babelMinify": {
          "module": {
            "#": "Activating this module would result in this error for task \"serve\": \"Module build failed (from ./node_modules/babel-loader/lib/index.js): TypeError: documentationWebsite/source/index.js: Cannot read property 'end' of null at _evaluate (documentationWebsite/node_modules/babel-traverse/lib/path/evaluation.js:159:58)\".",
            "evaluate": false,
            "#0": "Activating this module would result in this error for task \"serve\": \"Module build failed (from ./node_modules/babel-loader/lib/index.js): TypeError: documentationWebsite/source/index.js: Cannot read property 'end' of null at _evaluate (documentationWebsite/node_modules/babel-traverse/lib/path/evaluation.js:159:58)\".",
            "guards": false
          }
        },
        "htmlMinifier": {
          "ignoreCustomComments": [
            {
              "__evaluate__": "/^\\|?[a-z]{2}[A-Z]{2}:/"
            },
            {
              "__evaluate__": "/^[a-z]{2}[A-Z]{2}$/"
            },
            {
              "__evaluate__": "/^showExample(?::[a-zA-Z]+)?$/"
            }
          ]
        }
      },
      "preprocessor": {
        "ejs": {
          "options": {
            "locals": {
              "API_DOCUMENTATION_PATH": "/apiDocumentation/",
              "CONTENT_FILE_PATH": "dummyDocumentation.html",
              "DISTRIBUTION_BUNDLE_FILE_PATH": "dummyDistributionBundle.zip",
              "LANGUAGES": {
                "__evaluate__": "self.module.preprocessor.html.options.locals.NAME === 'documentationWebsite' ? ['enUS', 'deDE', 'frFR'] : ['enUS']"
              },
              "NAME": "documentationWebsite",
              "META_TAGS": [],
              "RENDER_CONTENT": true,
              "SOURCE_URL": {
                "__evaluate__": "`https://github.com/thaibault/${self.module.preprocessor.html.options.locals.NAME}`"
              },
              "TAGLINE": "generic documentation website pattern",
              "URL": {
                "__evaluate__": "`http://torben.website/${self.module.preprocessor.html.options.locals.NAME}`"
              }
            }
          }
        }
      },
      "replacements": {
        "normal": {
          "^clientnode$": {
            "__evaluate__": "path.resolve('./node_modules/clientnode/index.compiled.js')"
          },
          "^@babel/polyfill$": "@babel/polyfill/dist/polyfill.min.js",
          "^jquery$": {
            "__evaluate__": "path.resolve('./node_modules/jquery/dist/jquery.min.js')"
          },
          "^jQuery-scrollTo$": "jquery.scrollto/jquery.scrollTo.min.js"
        }
      },
      "skipParseRegularExpressions": {
        "__evaluate__": "/(?:^|\\/)(?:(?:@babel\\/polyfill\\/dist\\/polyfill)|(?:jquery\\/dist\\/jquery)|(?:webpack\\/buildin\\/global)|(?:webpack\\/buildin\\/module))(?:\\.min)?\\.js(?:\\?.+|$)/"
      }
    },
    "path": {
      "source": {
        "asset": {
          "javaScript": "./"
        }
      },
      "target": {
        "asset": {
          "javaScript": "./",
          "cascadingStyleSheet": "./"
        }
      }
    }
  }
}
