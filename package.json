{
  "name": "documentation-website",
  "version": "1.0.254",
  "description": "Declarative multilanguage documentation website generator",
  "keywords": [
    "documentation",
    "website",
    "homepage",
    "page",
    "project"
  ],
  "bugs": {
    "email": "info@torben.website",
    "url": "https://github.com/thaibault/documentation-website/issues"
  },
  "license": "CC-BY-3.0",
  "author": {
    "name": "Torben Sickert",
    "email": "info@torben.website",
    "url": "https://torben.website"
  },
  "files": [
    "build/deploy.js",
    "build/deploy.d.ts",
    "source"
  ],
  "main": "source/index.html.ejs",
  "bin": {
    "documentation-website": "build/deploy.js"
  },
  "repository": {
    "type": "git",
    "url": "git@github.io:thaibault/documentation-website.git"
  },
  "scripts": {
    "build": "yarn build:web; yarn build:deploy",
    "build:deploy": "weboptimizer build '{__reference__: \"target:deploy\"}'",
    "build:web": "weboptimizer build",
    "build:stats": "weboptimizer build --profile --json /tmp/stats.json | sed --regexp-extended 's/^Running \".+$//' | sed --regexp-extended 's/^Consolidate module request \".+$//' >/tmp/stats.json && echo 'Results successfully written to \"/tmp/stats.json\".'",
    "check": "yarn check:types; yarn lint",
    "check:types": "weboptimizer check:types",
    "clear": "weboptimizer clear",
    "document": "weboptimizer document",
    "lint": "weboptimizer lint",
    "prepare": "yarn build",
    "serve": "weboptimizer serve",
    "start": "yarn serve",
    "test": "yarn clear && weboptimizer test",
    "test:browser": "yarn clear && weboptimizer test:browser",
    "test:coverage": "yarn clear && weboptimizer test:coverage",
    "test:coverage:report": "yarn clear && weboptimizer test:coverage:report",
    "update": "yarn version --patch && yarn publish",
    "watch": "weboptimizer build --watch"
  },
  "dependencies": {
    "@types/webpack": "https://registry.yarnpkg.com/@favware/skip-dependency/-/skip-dependency-1.1.1.tgz"
  },
  "devDependencies": {
    "@babel/eslint-parser": "*",
    "@babel/runtime": "*",
    "@types/archiver": "*",
    "@types/ejs": "*",
    "@types/html-minifier": "*",
    "@types/jest": "*",
    "@types/jquery": "*",
    "@types/jsdom": "*",
    "@types/marked": "*",
    "@types/node": "*",
    "@types/unzipper": "*",
    "@typescript-eslint/eslint-plugin": "*",
    "@typescript-eslint/parser": "*",
    "archiver": "*",
    "clientnode": "*",
    "css-loader": "*",
    "cssnano": "<=4",
    "default-gateway": "*",
    "errorreporter": "*",
    "eslint": "*",
    "eslint-config-google": "*",
    "eslint-plugin-jsdoc": "*",
    "favicons": "*",
    "favicons-webpack-plugin": "*",
    "highlight.js": "*",
    "internationalisation": "*",
    "jest": "*",
    "jquery": "*",
    "jsdoc": "*",
    "legal-notes": "*",
    "marked": "*",
    "mini-css-extract-plugin": "*",
    "postcss": "*",
    "postcss-fontpath": "*",
    "postcss-import": "<=12",
    "postcss-loader": "*",
    "postcss-mixins": "<=6",
    "postcss-nested": "*",
    "postcss-preset-env": "*",
    "postcss-sprites": "*",
    "postcss-url": "<=9",
    "spin.js": "*",
    "style-loader": "*",
    "stylelint": "*",
    "stylelint-config-standard": "*",
    "ua-parser-js": "*",
    "unzipper": "*",
    "weboptimizer": "*",
    "webpack-dev-server": "*",
    "website-utilities": "*"
  },
  "engines": {
    "node": ">=17",
    "npm": ">=7"
  },
  "resolutions": {
    "@types/webpack": "https://registry.yarnpkg.com/@favware/skip-dependency/-/skip-dependency-1.1.1.tgz",
    "colors": "1.4.0"
  },
  "sideEffects": true,
  "webOptimizer": {
    "build": {
      "definitions": {
        "TRACKING_CODE": {
          "__evaluate__": "`'${self.module.preprocessor.html.options.locals.TRACKING_CODE}'`"
        },
        "LANGUAGES": {
          "__evaluate__": "`['${self.module.preprocessor.html.options.locals.LANGUAGES.join(\"', '\")}']`"
        }
      }
    },
    "commandLine": {
      "test": {
        "environments": [
          "jsdom"
        ]
      }
    },
    "injection": {
      "chunks": false,
      "entry": {
        "#": "errorreporter\": \"errorreporter",
        "__evaluate__": "2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2].startsWith('test') ? {testBundle: './test.ts'} : {index: ['ua-parser-js', `./${path.relative(self.path.source.base, self.path.source.asset.cascadingStyleSheet)}/index`, './index']}"
      }
    },
    "library": false,
    "module": {
      "aliases": {
        "^jquery$": "jquery/dist/jquery.min.js"
      },
      "enforceDeduplication": true,
      "optimizer": {
        "babelMinify": {
          "bundle": {
            "transform": {
              "#": "To provide a logging output we need to exclude this feature.",
              "removeConsole": false
            }
          }
        },
        "htmlMinifier": {
          "ignoreCustomComments": [
            {
              "__evaluate__": "/^\\|?[a-z]{2}[A-Z]{2}:/"
            },
            {
              "__evaluate__": "/^[a-z]{2}[A-Z]{2}$/"
            },
            {
              "__evaluate__": "/^showExample(?::[a-zA-Z]+)?$/"
            }
          ]
        }
      },
      "preprocessor": {
        "cascadingStyleSheet": {
          "additional": {
            "plugins": {
              "pre": {
                "__append__": [
                  "require('postcss-mixins')",
                  "require('postcss-nested')"
                ]
              }
            }
          }
        },
        "ejs": {
          "options": {
            "locals": {
              "API_DOCUMENTATION_PATH": "/apiDocumentation/",
              "CONTENT_FILE_PATH": "dummyDocumentation.html",
              "DISTRIBUTION_BUNDLE_FILE_PATH": "dummyDistributionBundle.zip",
              "LANGUAGES": {
                "__evaluate__": "self.module.preprocessor.html.options.locals.NAME === 'documentation-website' ? ['enUS', 'deDE', 'frFR'] : ['enUS']"
              },
              "NAME": "documentation-website",
              "META_TAGS": [],
              "RENDER_CONTENT": true,
              "SOURCE_URL": {
                "__evaluate__": "`https://github.com/thaibault/${self.module.preprocessor.html.options.locals.NAME}`"
              },
              "TAGLINE": "generic documentation website pattern",
              "URL": {
                "__evaluate__": "`https://torben.website/${self.module.preprocessor.html.options.locals.NAME}`"
              }
            }
          }
        }
      },
      "skipParseRegularExpressions": {
        "__evaluate__": "/(?:^|\\/)(?:(?:jquery\\/dist\\/jquery))(?:\\.min)?\\.js(?:\\?.+|$)/"
      }
    },
    "path": {
      "source": {
        "asset": {
          "javaScript": "./"
        }
      },
      "target": {
        "asset": {
          "javaScript": "./",
          "cascadingStyleSheet": "./"
        }
      }
    },
    "target:deploy": {
      "assetPattern": {
        "javaScript": {
          "pattern": {
            "#": "This is how we can make our main exported artefact executable.",
            "__evaluate__": "`#!/usr/bin/env node\n// -*- coding: utf-8 -*-\n${self.generic.assetPattern.javaScript.pattern}{1}`"
          }
        }
      },
      "exportFormat": {
        "external": "commonjs2",
        "self": "commonjs2"
      },
      "files": {
        "defaultHTML": {
          "template": {
            "filePath": "none"
          }
        }
      },
      "injection": {
        "entry": {
          "__evaluate__": "2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2].startsWith('test') ? {testBundle: './test.ts'} : {deploy: './deploy'}"
        }
      },
      "targetTechnology": {
        "boilerplate": "node",
        "payload": "node"
      }
    }
  }
}
